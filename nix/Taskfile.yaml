# yaml-language-server: $schema=https://taskfile.dev/schema.json

version: "3"
tasks:
  apply-bastion-flake:
    desc: Apply the bastion flake
    cmds:
      - home-manager switch --flake .#bastion

  dry-run-mac:
    desc: Dry run macos configuration
    deps:
      - task: build-mac
    cmds:
      - sudo ./result/sw/bin/darwin-rebuild switch --dry-run --flake .#{{ .TARGET_HOST }}
    vars:
      TARGET_HOST: mac

  build-mac:
    desc: Build macos configuration
    cmds:
      - nix --extra-experimental-features 'nix-command flakes'  build ".#darwinConfigurations.{{ .TARGET_HOST }}.system"
      # - darwin-rebuild build --flake .#{{ .TARGET_HOST }}
    vars:
      TARGET_HOST:
        sh: hostname -s

  apply-mac-flake:
    desc: Apply the mac flake
    # deps:
    # - task: build-mac
    cmds:
      # - nixos-rebuild switch --flake .#mac
      # - sudo ./result/sw/bin/darwin-rebuild switch --show-trace --flake .#{{ .TARGET_HOST }}
      - sudo nix run nix-darwin -- switch --flake ".#{{ .TARGET_HOST }}"
    env:
      NIXPKGS_ALLOW_UNFREE: 1
    vars:
      TARGET_HOST:
        sh: hostname -s

  update:
    desc: Update nix channels and flake
    cmds:
      - task: update-channels
      - task: update-flake
      - task: apply-mac-flake

  update-channels:
    desc: Update nix channels
    cmds:
      - nix-channel --update
    ignore_error: true

  update-flake:
    desc: Update flake
    cmds:
      - nix flake update
    ignore_error: true

  gc:
    desc: Garbage collect nix store
    cmds:
      - nix-env --delete-generations {{ .generations }}
      - nix-store --gc
    ignore_error: true
    vars:
      generations: 5
